name: Sheffessions development pipeline

on:
  pull_request:
    branches: [
      "development",
    ]
  # push:
  #   branches: [
  #     "feature/databases"
  #   ]

jobs:
  # check-migrations:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   - name: Check for migration filename prefix collisions
  #     working-directory: ./backend/sheffessions_api
  #     run: |
  #       # Store list of migration prefixes in PR
  #       pr_migrations_prefixes=$(ls db/migrations | cut -d'_' -f1 | sort | uniq)
  #
  #       # Switch to development branch
  #       git fetch origin development:development
  #       git checkout development
  #
  #       # Compare migration prefixes
  #       for prefix in $pr_migrations_prefixes; do
  #         if ls db/migrations | grep -q "^${prefix}_"; then
  #           echo "Collision detected for migration prefix: $prefix"
  #           exit 1
  #         fi
  #       done
  #
  #       echo "No migration prefix collisions detected."
  #
  # unit-test-sheffessions_api:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #
  #   - name: Set up Go
  #     uses: actions/setup-go@v3
  #     with:
  #       go-version: '1.21'
  #       cache: true
  #       cache-dependency-path: ./backend/sheffessions_api/go.sum
  #
  #   - name: Fetch dependencies
  #     working-directory: ./backend/sheffessions_api
  #     run: |
  #       go get -v ./...
  #
  #   - name: Run backend/sheffessions_api unit tests
  #     working-directory: ./backend/sheffessions_api
  #     run: go test -v *_unit_test.go
  #
  # unit-test-frontend:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #
  #   - name: Install Node.js
  #     uses: actions/setup-node@v3
  #     with:
  #       node-version: '18'
  #
  #   - name: Cache node modules
  #     uses: actions/cache@v3
  #     with:
  #       path: ~/.pnpm-cache
  #       key: ${{ runner.OS }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
  #       restore-keys: |
  #         ${{ runner.OS }}-pnpm-
  #
  #   - name: Install pnpm
  #     run: npm install -g pnpm
  #
  #   - name: Install dependencies
  #     working-directory: ./frontend/sheffessions
  #     run: pnpm install
  #
  #   - name: Run frontend/sheffessions unit tests
  #     working-directory: ./frontend/sheffessions
  #     run: pnpm test:unit

  integration-test:
    # needs: [
    #   unit-test-sheffessions_api,
    #   unit-test-frontend
    # ]
    runs-on: ubuntu-latest
    env:
      POSTGRESQL_URL: postgres://postgres_user:mysecretpassword@postgres:5432/devdb?sslmode=disable&search_path=public
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres_user
          POSTGRES_PASSWORD: mysecretpassword
          POSTGRES_DB: devdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.21'
          cache: true
          cache-dependency-path: ./backend/sheffessions_api/go.sum

      - name: Fetch dependencies
        working-directory: ./backend/sheffessions_api
        run: go get -v ./...

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-cache
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        working-directory: ./frontend/sheffessions
        run: pnpm install

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..30}; do
            if pg_isready -h postgres -U postgres_user; then
              break
            fi
            echo "Waiting for PostgreSQL to be ready..."
            sleep 1
          done

      - name: Build and Run sheffessions_api
        working-directory: ./backend/sheffessions_api
        run: |
          go build -o server main.go
          ./server &

      - name: Wait for Backend to Start
        run: |
          while ! curl -s localhost:8080 > /dev/null; do
            sleep 5
          done

      - name: Run sheffessions_api Integration Tests
        working-directory: ./backend/sheffessions_api
        run: go test -v *_integration_test.go

      - name: Run Frontend Integration Tests
        working-directory: ./frontend/sheffessions
        run: |
          pnpm test:integration

      - name: Shutdown Backend
        if: always()
        run: pkill server
