name: Tear Down Staging Instance

on:
  schedule:
    - cron: '0 4 * * *'  # This runs at 4 AM every day
  push:
    branches: [
      "feature/rollbacks"
    ]

jobs:
  cleanup-staging:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS_STAGING }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: Install gcloud beta components
      run: gcloud components install beta --quiet

    - name: Cleanup old Docker images
      run: |
        _cleanup() {
          image_path="$1-docker.pkg.dev/$2/$3/$4"
          echo "Starting to filter: $image_path"
          tags=$(gcloud artifacts docker images list $image_path \
            --include-tags \
            --filter="tags:IPLA* AND UPDATE_TIME.date('%Y-%m-%d', Z)<=$(date --date="-$5 days" +'%Y-%m-%d')" \
            --format='value(TAGS)')
          if [ -z "$tags" ]; then
            echo "No images to clean"
          else
            echo "Images found: $tags"
            for tag in $tags; do
              echo "Deleting image: $image_path:$tag"
              gcloud artifacts docker images delete "$image_path:$tag" --quiet
            done
          fi
        }

        location="europe"
        project_id="sheffessions-staging"
        repository_id="sheffessions-docker-repository"
        image_name="sheffessions_api_staging" # Change as needed
        older_than_days=7 # Adjust as needed

        _cleanup $location $project_id $repository_id $image_name $older_than_days

        image_name="sheffessions_fe_staging" # Change for the second cleanup

        _cleanup $location $project_id $repository_id $image_name $older_than_days

        echo "DONE"
    # - name: 'Tear Down PostgreSQL Instance on Cloud SQL'
    #   run: |
    #     gcloud sql instances patch sheffessions-staging-postgresql --no-deletion-protection
    #     gcloud sql instances delete sheffessions-staging-postgresql --project=sheffessions-staging --quiet

    # cleanup-production:
    # runs-on: ubuntu-latest
    #
    # steps:
    # - name: Checkout code
    #   uses: actions/checkout@v3
    #
    # - id: 'auth'
    #   uses: 'google-github-actions/auth@v1'
    #   with:
    #     credentials_json: '${{ secrets.GCP_CREDENTIALS_PRODUCTION }}'
    #
    # - name: 'Set up Cloud SDK'
    #   uses: 'google-github-actions/setup-gcloud@v1'
    #
    # - name: 'Delete old Docker images from Artifact Registry'
    #   run: |
    #     # List the images in the registry, sorted by creation time (newest first), and filter out the N latest.
    #     # Adjust the number in `tail -n +N` to keep the last N versions. For example, to keep the last 5, you would use `tail -n +6`.
    #     IMAGES_TO_DELETE=$(gcloud beta artifacts docker images list europe-docker.pkg.dev/sheffessions/sheffessions-docker-repository/sheffessions_api --format='get(name)' --sort-by=~timestamp | tail -n +6)
    #     
    #     # Delete each of the images
    #     for IMAGE in $IMAGES_TO_DELETE; do
    #       gcloud beta artifacts docker images delete $IMAGE
        # done
