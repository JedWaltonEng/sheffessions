name: Tear Down Staging Instance

on:
  schedule:
    - cron: '0 4 * * *'  # This runs at 4 AM every day
  push:
    branches: [
      "feature/rollbacks"
    ]

jobs:
  cleanup-staging:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS_STAGING }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: Delete old images from sheffessions_api_staging
      run: |
        set -e
        # Get the list of images
        IMAGES=$(gcloud artifacts docker images list europe-docker.pkg.dev/sheffessions-staging/sheffessions-docker-repository/sheffessions_api_staging --format='value(image)')
        echo "API images: $IMAGES"
        for IMAGE in $IMAGES; do
          DETAILS=$(gcloud artifacts docker images describe $IMAGE --format='value(image.digest, createTime)')
          echo $DETAILS >> api_image_details.txt
        done
        [ -f api_image_details.txt ] || touch api_image_details.txt
        DIGESTS_TO_DELETE=$(sort -k2 -r api_image_details.txt | tail -n +6 | awk '{print $1}')
        for DIGEST in $DIGESTS_TO_DELETE; do
          gcloud beta artifacts docker images delete "europe-docker.pkg.dev/sheffessions-staging/sheffessions-docker-repository/sheffessions_api_staging@$DIGEST" --quiet
        done

    - name: Delete old images from sheffessions_fe_staging
      run: |
        set -e
        # Get the list of images
        IMAGES=$(gcloud artifacts docker images list europe-docker.pkg.dev/sheffessions-staging/sheffessions-docker-repository/sheffessions_fe_staging --format='value(image)')
        echo "FE images: $IMAGES"
        for IMAGE in $IMAGES; do
          DETAILS=$(gcloud artifacts docker images describe $IMAGE --format='value(image.digest, createTime)')
          echo $DETAILS >> fe_image_details.txt
        done
        [ -f fe_image_details.txt ] || touch fe_image_details.txt
        DIGESTS_TO_DELETE=$(sort -k2 -r fe_image_details.txt | tail -n +6 | awk '{print $1}')
        for DIGEST in $DIGESTS_TO_DELETE; do
          gcloud beta artifacts docker images delete "europe-docker.pkg.dev/sheffessions-staging/sheffessions-docker-repository/sheffessions_fe_staging@$DIGEST" --quiet
        done


    # - name: 'Tear Down PostgreSQL Instance on Cloud SQL'
    #   run: |
    #     gcloud sql instances patch sheffessions-staging-postgresql --no-deletion-protection
    #     gcloud sql instances delete sheffessions-staging-postgresql --project=sheffessions-staging --quiet

    # cleanup-production:
    # runs-on: ubuntu-latest
    #
    # steps:
    # - name: Checkout code
    #   uses: actions/checkout@v3
    #
    # - id: 'auth'
    #   uses: 'google-github-actions/auth@v1'
    #   with:
    #     credentials_json: '${{ secrets.GCP_CREDENTIALS_PRODUCTION }}'
    #
    # - name: 'Set up Cloud SDK'
    #   uses: 'google-github-actions/setup-gcloud@v1'
    #
    # - name: 'Delete old Docker images from Artifact Registry'
    #   run: |
    #     # List the images in the registry, sorted by creation time (newest first), and filter out the N latest.
    #     # Adjust the number in `tail -n +N` to keep the last N versions. For example, to keep the last 5, you would use `tail -n +6`.
    #     IMAGES_TO_DELETE=$(gcloud beta artifacts docker images list europe-docker.pkg.dev/sheffessions/sheffessions-docker-repository/sheffessions_api --format='get(name)' --sort-by=~timestamp | tail -n +6)
    #     
    #     # Delete each of the images
    #     for IMAGE in $IMAGES_TO_DELETE; do
    #       gcloud beta artifacts docker images delete $IMAGE
        # done
