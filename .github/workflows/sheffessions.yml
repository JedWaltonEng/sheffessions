# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go
name: Sheffessions pipeline 

on:
  push:
    branches: [
      "feature/cloudrun",
      "develop",
      "staging",
      "main"
    ]
  pull_request:
    branches: [ 
      "feature/cloudrun",
      "develop",
      "staging",
      "main"
    ]

jobs:
  unit-test-sheffessions_api:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.21'
        cache: true
        cache-dependency-path: ./backend/sheffessions_api/go.sum

    - name: Fetch dependencies
      working-directory: ./backend/sheffessions_api
      run: |
        go get -v ./...

    - name: Run backend/sheffessions_api unit tests
      working-directory: ./backend/sheffessions_api
      run: go test -v *_unit_test.go

  unit-test-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Cache node modules
      uses: actions/cache@v3
      with:
        path: ~/.pnpm-cache
        key: ${{ runner.OS }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.OS }}-pnpm-

    - name: Install pnpm
      run: npm install -g pnpm

    - name: Install dependencies
      working-directory: ./frontend/sheffessions
      run: pnpm install
    
    - name: Run frontend/sheffessions unit tests
      working-directory: ./frontend/sheffessions
      run: pnpm test:unit

  integration-test:
    needs: [
      unit-test-sheffessions_api,
      unit-test-frontend
    ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.21'
          cache: true
          cache-dependency-path: ./backend/sheffessions_api/go.sum

      - name: Fetch dependencies
        working-directory: ./backend/sheffessions_api
        run: go get -v ./...

      # Setup MySQL database here

      # Cache pnpm modules
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-cache
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        working-directory: ./frontend/sheffessions
        run: pnpm install

      - name: Build and Run sheffessions_api
        working-directory: ./backend/sheffessions_api
        run: |
          go build -o server main.go
          ./server &

      - name: Wait for Backend to Start
        run: |
          while ! curl -s localhost:8080 > /dev/null; do
            sleep 5
          done

      - name: Run sheffessions_api Integration Tests
        working-directory: ./backend/sheffessions_api
        run: go test -v *_integration_test.go

      - name: Run Frontend Integration Tests
        working-directory: ./frontend/sheffessions
        run: |
          pnpm test:integration

      - name: Shutdown Backend
        if: always()
        run: pkill server


  production-deploy-sheffessions_fe:
    needs: [
      unit-test-sheffessions_api,
      unit-test-frontend,
      integration-test
    ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY_PRODUCTION }}
          project_id: ${{ secrets.GCP_PROJECT_ID_PRODUCTION }}

      - name: Build and push Docker image to Google Artifact Registry
        run: |
          docker build -t $REGION-docker.pkg.dev/$GCP_PROJECT_ID/my-repo/sheffessions_fe:latest -f frontend/sheffessions/Dockerfile frontend/sheffessions
          gcloud --quiet auth configure-docker $REGION-docker.pkg.dev
          docker push $REGION-docker.pkg.dev/$GCP_PROJECT_ID/my-repo/sheffessions_fe:latest
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID_PRODUCTION }}
          REGION: ${{ secrets.REGION_PRODUCTION }}

      - name: Deploy to Google Cloud Run
        run: |
          gcloud run deploy sheffessions_fe --image $REGION-docker.pkg.dev/$GCP_PROJECT_ID/my-repo/sheffessions_fe:latest --platform managed --region $REGION
        env:
          REGION: ${{ secrets.REGION_PRODUCTION }}

  # deploy-sheffessions_api:
  #   needs: [unit-test-sheffessions_api, unit-test-frontend, integration-test]
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   
  #   - name: Authenticate with GCP
  #     run: echo "$GOOGLE_APPLICATION_CREDENTIALS" | gcloud auth activate-service-account --key-file=-
  #     env:
  #       GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
  #
  #   - name: Set up Cloud SDK
  #     uses: google-github-actions/setup-gcloud@v0.2.0
  #     with:
  #       project_id: sheffessions
  #       service_account_key: ${{ secrets.GCP_CREDENTIALS }}
  #       export_default_credentials: true
